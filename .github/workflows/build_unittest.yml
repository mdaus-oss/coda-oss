name: build_unittest

on: [push]

jobs:
  build-windows-cmake-default:
    name: Windows
    runs-on: [windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: configure
      run: |
        ls env:
        mkdir target-Release
        cd target-Release
        cmake .. -DCMAKE_INSTALL_PREFIX=installWindowsCMake-Github -DPYTHON_VERSION="3.7"
        cd ..
        mkdir target-Debug
        cd target-Debug
        cmake .. -DCMAKE_INSTALL_PREFIX=installWindowsCMake-Github -DENABLE_PYTHON=OFF
    - name: build
      run: |
        cd target-Release
        cmake --build . --config Release -j
        cd ..
        cd target-Debug
        cmake --build . --config Debug -j
    - name: install
      run: |
        cd target-Release
        cmake --build . --config Release --target install
        cd ..
        cd target-Debug
        cmake --build . --config Debug --target install
    - name: test
      run: |
        cd target-Release
        ctest -C Release
        cd ..
        cd target-Debug
        ctest -C Debug


  build-linux-cmake-default:
    name: Linux
    runs-on: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: configure
      run: |
        env
        which python
        mkdir target
        cd target
        cmake .. -DCMAKE_INSTALL_PREFIX=installLinuxCMake-Github -DPYTHON_VERSION=3.7
    - name: build
      run: |
        cd target
        cmake --build . -j
    - name: install
      run: |
        cd target
        cmake --build . --target install
    - name: test
      run: |
        cd target
        ctest


  build-windows-cmake-ninja:
    name: Windows
    runs-on: [windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Get latest CMake and ninja
      # Using 'latest' branch, the most recent CMake and ninja are installed.
      uses: lukka/get-cmake@latest        # THIS IS THE ONE LINER YOU NEED
    - name: configure
      run: |
        ls env:
        mkdir target
        cd target
        cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=installWindows-Github -DPYTHON_VERSION="3.7"
    - name: build
      run: |
        cd target
        cmake --build . --config Release -j
    - name: install
      run: |
        cd target
        cmake --build . --config Release --target install
    - name: test
      run: |
        cd target
        ctest -C Release


  build-linux-cmake-ninja:
    name: Linux
    runs-on: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Get latest CMake and ninja
      # Using 'latest' branch, the most recent CMake and ninja are installed.
      uses: lukka/get-cmake@latest        # THIS IS THE ONE LINER YOU NEED
    - name: configure
      run: |
        env
        which python
        mkdir target
        cd target
        cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=installLinux-Github -DPYTHON_VERSION=3.7
    - name: build
      run: |
        cd target
        cmake --build . -j
    - name: install
      run: |
        cd target
        cmake --build . --target install
    - name: test
      run: |
        cd target
        ctest




  build-windows-waf:
    name: Windows-waf
    runs-on: [windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: configure
      run: |
        pip install numpy
        mkdir installWindowsWaf-Github
        python waf configure --prefix="$PWD/installWindowsWaf-Github"
    - name: build
      run: |
        python waf build
    - name: install
      run: |
        python waf install
    - name: test
      run: |
        python waf install --alltests

  build-windows-waf-debug:
    name: Windows-waf-Debug
    runs-on: [windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: configure
      run: |
        pip install numpy
        mkdir installWindowsWafDebug-Github
        python waf configure --prefix="$PWD/installWindowsWafDebug-Github" --enable-debugging
    - name: build
      run: |
        python waf build
    - name: install
      run: |
        python waf install
    - name: test
      run: |
        python waf install --alltests

  build-linux-waf:
    name: Linux-waf
    runs-on: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: configure
      run: |
        pip install numpy
        mkdir installLinuxWaf-Github
        python waf configure --prefix="$PWD/installLinuxWaf-Github" --enable-debugging
    - name: build
      run: |
        python waf build
    - name: install
      run: |
        python waf install
    - name: test
      run: |
        python waf install --alltests

  build-linux-waf-debug:
    name: Linux-waf-Debug
    runs-on: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: configure
      run: |
        pip install numpy
        mkdir installLinuxWafDebug-Github
        python waf configure --prefix="$PWD/installLinuxWafDebug-Github" --enable-debugging
    - name: build
      run: |
        python waf build
    - name: install
      run: |
        python waf install
    - name: test
      run: |
        python waf install --alltests
